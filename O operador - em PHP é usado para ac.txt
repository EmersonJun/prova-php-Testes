O operador -> em PHP é usado para acessar propriedades (variáveis) e métodos (funções) de um objeto.

Exemplo específico:
php
Copiar
Editar
$_SESSION['user_id'] = $obj_usuario_resposta->id;
Aqui:

$obj_usuario_resposta é um objeto retornado do banco de dados.

->id acessa a propriedade id desse objeto, que representa o ID do usuário.

De onde vem esse objeto?
Ele vem dessa linha:

php
Copiar
Editar
$obj_usuario_resposta = $resp->fetch_object();
O método fetch_object() da biblioteca MySQLi retorna uma linha do banco como um objeto PHP. Por exemplo, se a tabela usuarios tiver as colunas id, nome_usuario e senha, então:

php
Copiar
Editar
$obj_usuario_resposta->id           // acessa o ID
$obj_usuario_resposta->nome_usuario // acessa o nome de usuário
$obj_usuario_resposta->senha        // acessa a senha criptografada
Resumo do uso de ->:
Se você tem um objeto como:

php
Copiar
Editar
class Pessoa {
    public $nome = "Carlos";
    public function falar() {
        echo "Olá!";
    }
}
Você acessa propriedades e métodos assim:

php
Copiar
Editar
$p = new Pessoa();
echo $p->nome;       // Acessa a propriedade "nome"
$p->falar();         // Chama o método "falar"
Conclusão:
O -> em PHP funciona como um “ponto” em outras linguagens (como JavaScript ou Java), e é essencial para trabalhar com objetos orientados a objetos no PHP.